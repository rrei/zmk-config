#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30

#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        bt_clr: bt_clr {
            compatible = "zmk,behavior-tap-dance";
            label = "bt_clr";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR>, <&none>, <&bt BT_CLR_ALL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lpar {
            bindings = <&kp LPAR>;
            key-positions = <15 16>;
        };

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <19 20>;
        };

        lbkt {
            bindings = <&kp LBKT>;
            key-positions = <4 3>;
        };

        rbkt {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };

        lbrc {
            bindings = <&kp LBRC>;
            key-positions = <28 27>;
        };

        rbrc {
            bindings = <&kp RBRC>;
            key-positions = <31 32>;
        };

        extended-layer {
            bindings = <&mo 1>;
            key-positions = <40 37>;
            slow-release;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE  &kp Q        &kp W        &kp E         &kp R          &kp T            &kp Y          &kp U           &kp I         &kp O        &kp P           &kp BACKSLASH
&kp MINUS  &mt LSHFT A  &mt LCTRL S  &lt 2 D       &lt 1 F        &kp G            &kp H          &lt 1 J         &lt 2 K       &mt RCTRL L  &mt RSHFT SEMI  &kp APOS
&kp EQUAL  &kp Z        &kp X        &kp C         &kp V          &kp B            &kp N          &kp M           &kp COMMA     &kp DOT      &kp SLASH       &kp F16
                                     &mt LALT DEL  &mt LCMD BSPC  &mt LSHFT ESC    &mt RCTRL RET  &mt RCMD SPACE  &mt RALT TAB
            >;
        };

        extended {
            bindings = <
&kp TILDE  &kp EXCL      &kp AT        &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR      &kp RPAR      &kp PIPE
&kp UNDER  &mt LSHFT N1  &mt LCTRL N2  &kp N3    &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &mt RCTRL N9  &mt RSHFT N0  &kp F12
&kp PLUS   &kp F1        &kp F2        &kp F3    &kp F4    &kp F5       &kp F6     &kp F7    &kp F8     &kp F9        &kp F10       &kp F11
                                       &trans    &trans    &trans       &trans     &trans    &trans
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &msc SCRL_RIGHT  &mmv MOVE_UP    &msc SCRL_LEFT   &msc SCRL_DOWN    &kp PG_UP  &kp HOME   &kp UP    &kp END    &trans  &trans
&trans  &mo 3   &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP      &kp PG_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &mo 3   &trans
&trans  &mo 4   &trans           &trans          &kp LBKT         &kp RBKT          &mkp RCLK  &mkp LCLK  &trans    &trans     &mo 4   &trans
                                 &trans          &trans           &trans            &trans     &trans     &trans
            >;
        };

        precision {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &kp C_VOL_UP  &kp C_BRI_UP          &none  &none  &bt_clr
&none  &none         &kp C_PREV    &kp C_PP      &kp C_NEXT    &none           &none  &kp C_VOL_DN  &kp C_BRIGHTNESS_DEC  &none  &none  &none
&none  &none         &none         &none         &none         &none           &none  &kp C_MUTE    &none                 &none  &none  &none
                                   &none         &none         &none           &none  &none         &none
            >;
        };
    };
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <300>;
    require-prior-idle-ms = <100>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <300>;
    require-prior-idle-ms = <100>;
};

&mmv_input_listener {
    precision {
        layers = <4>;
        input-processors = <&zip_xy_scaler 1 3>;
    };
};

&msc_input_listener {
    precision {
        layers = <4>;
        input-processors = <&zip_scroll_scaler 1 3>;
    };
};
