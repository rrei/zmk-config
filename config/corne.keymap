#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    /aliases {
        lpair = &lpair_shift;
        rpair = &rpair_shift;
    };

    behaviors {
        mt {
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        lt {
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        lpair_shift: mod_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&lpair_alt>, <&kp LESS_THAN>;
        };
        lpair_alt: mod_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
            bindings = <&lpair_gui>, <&kp LEFT_BRACE>;
        };
        lpair_gui: mod_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>;
        };

        rpair_shift: mod_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&rpair_alt>, <&kp GREATER_THAN>;
        };
        rpair_alt: mod_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
            bindings = <&rpair_gui>, <&kp RIGHT_BRACE>;
        };
        rpair_gui: mod_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACKET>;
        };
    };

    combos {
        compatible = "zmk,combos";

        middle_click {
            bindings = <&mkp MCLK>;
            key-positions = <40 41>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB         &kp Q               &kp W           &kp E        &kp R               &kp T            &kp Y      &kp U                &kp I        &kp O            &kp P                        &kp BACKSLASH
&mt LSHIFT ESC  &mt LEFT_CONTROL A  &mt LEFT_ALT S  &lt 1 D      &mt LEFT_COMMAND F  &kp G            &kp H      &mt RIGHT_COMMAND J  &lt 1 K      &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMICOLON  &mt RIGHT_SHIFT SINGLE_QUOTE
&kp GRAVE       &kp Z               &kp X           &kp C        &kp V               &kp B            &kp N      &kp M                &kp COMMA    &kp DOT          &kp FSLH                     &kp GLOBE
                                                    &lt 2 MINUS  &lpair              &kp BACKSPACE    &kp SPACE  &rpair               &lt 3 EQUAL
            >;
        };

        navigation {
            bindings = <
&trans                 &trans            &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT   &msc SCRL_UP      &kp PG_UP  &kp HOME   &kp UP     &kp END    &trans  &trans
&mt LEFT_SHIFT ESCAPE  &kp LEFT_CONTROL  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT   &msc SCRL_DOWN    &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &trans  &trans
&trans                 &trans            &trans          &trans          &trans            &trans            &trans     &trans     &trans     &trans     &trans  &trans
                                                         &kp LEFT_ALT    &kp LEFT_COMMAND  &kp DELETE        &kp ENTER  &mkp LCLK  &mkp RCLK
            >;
        };

        numbers {
            bindings = <
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&trans  &trans           &trans        &trans        &trans        &trans          &trans        &trans         &trans        &trans                &trans                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
                                       &trans        &trans        &trans          &trans        &trans         &trans
            >;
        };

        functions {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &none  &none           &none             &none       &kp C_VOLUME_UP      &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3           &bt BT_SEL 4  &bt BT_CLR
&none  &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN    &none         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_AUTO  &none         &none
&none  &none  &none           &none             &none       &kp C_MUTE           &none         &none                 &none                 &none                  &none         &none
                              &none             &none       &none                &none         &none                 &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        media-condition {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
