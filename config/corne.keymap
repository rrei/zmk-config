#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>

/ {
    behaviors {
        mt {
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            require-prior-idle-ms = <150>;
        };

        lt {
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB         &kp Q        &kp W  &kp E           &kp R               &kp T        &kp Y      &kp U           &kp I           &kp O    &kp P                &kp BACKSLASH
&mt LSHIFT ESC  &mt LCTRL A  &kp S  &lt 1 D         &lt 2 F             &kp G        &kp H      &lt 2 J         &lt 1 K         &kp L    &mt RCTRL SEMICOLON  &mt RSHIFT SINGLE_QUOTE
&kp GRAVE       &kp Z        &kp X  &kp C           &kp V               &kp B        &kp N      &kp M           &kp COMMA       &kp DOT  &kp SLASH            &kp ENTER
                                    &mt LALT LBKT   &mt LCMD BACKSPACE  &kp MINUS    &kp EQUAL  &mt RCMD SPACE  &mt RALT RBKT
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &msc SCRL_RIGHT  &mmv MOVE_UP    &msc SCRL_LEFT   &msc SCRL_DOWN    &kp PG_UP  &kp HOME        &kp UP    &kp END    &trans  &trans
&trans  &trans  &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP      &kp PG_DN  &kp LEFT        &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans           &trans          &trans           &trans            &trans     &mo 4           &trans    &trans     &trans  &trans
                                 &mt LALT LPAR   &mt LCMD DELETE  &mkp LCLK         &mkp RCLK  &mt RCMD ENTER  &mt RALT RPAR
            >;
        };

        numbers {
            bindings = <
&trans  &kp F1        &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10       &kp F11
&trans  &mt LCTRL N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &mt RCTRL N0  &mt RSHIFT F12
&trans  &trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans        &trans
                              &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4    &none  &kp C_BRIGHTNESS_INC   &kp C_VOLUME_UP    &none  &none  &bt BT_CLR
&none  &none         &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &none           &none  &kp C_BRIGHTNESS_DEC   &kp C_VOLUME_DOWN  &none  &none  &none
&none  &none         &none           &none             &none         &none           &none  &kp C_BRIGHTNESS_AUTO  &kp C_MUTE         &none  &none  &none
                                     &none             &none         &none           &none  &none  &none
            >;
        };

        precision {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        media_condition {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

&mmv_input_listener {
    precision {
        layers = <4>;
        input-processors = <&zip_xy_scaler 1 2>;
    };
};

&msc_input_listener {
    precision {
        layers = <4>;
        input-processors = <&zip_scroll_scaler 1 2>;
    };
};
