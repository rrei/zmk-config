#define ZMK_POINTING_DEFAULT_MOVE_VAL 1800
#define ZMK_POINTING_DEFAULT_SCRL_VAL 24

#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        bt_clr: bt_clr {
            compatible = "zmk,behavior-tap-dance";
            label = "bt_clr";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR>, <&none>, <&bt BT_CLR_ALL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        f16_left {
            bindings = <&kp F16>;
            key-positions = <15 16>;
            layers = <0>;
        };

        f16_right {
            bindings = <&kp F16>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB        &kp Q        &kp W        &mt LALT E      &kp R          &kp T         &kp Y        &kp U          &mt RALT I      &kp O        &kp P           &kp BACKSLASH
&mt LSHFT ESC  &mt LSHFT A  &mt LCTRL S  &lt 2 D         &mt LCMD F     &kp G         &kp H        &mt RCMD J     &lt 3 K         &mt RCTRL L  &mt RSHFT SEMI  &kp APOS
&kp GRAVE      &kp Z        &kp X        &kp C           &kp V          &kp B         &kp N        &kp M          &kp COMMA       &kp DOT      &kp SLASH       &mt GLOBE RET
                                         &mt LALT MINUS  &mt LCMD LBKT  &lt 1 BSPC    &lt 1 SPACE  &mt RCMD RBKT  &mt RALT EQUAL
            >;
        };

        extended {
            bindings = <
&trans     &kp F1        &kp F2        &mt LALT F3     &kp F4         &kp F5       &kp F6     &kp F7         &mt RALT F8    &kp F9        &kp F10       &kp F11
&trans     &mt LSHFT N1  &mt LCTRL N2  &lt 2 N3        &mt LCMD N4    &kp N5       &kp N6     &mt RCMD N7    &lt 3 N8       &mt RCTRL N9  &mt RSHFT N0  &kp F12
&kp TILDE  &kp EXCL      &kp AT        &kp HASH        &kp DLLR       &kp PRCNT    &kp CARET  &kp AMPS       &kp STAR       &kp LPAR      &kp RPAR      &trans
                                       &mt LALT UNDER  &mt LCMD LBRC  &lt 5 DEL    &lt 5 RET  &mt RCMD RBRC  &mt RALT PLUS
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &msc SCRL_RIGHT  &trans          &msc SCRL_LEFT  &msc SCRL_DOWN    &kp PG_UP  &kp HOME       &kp UP         &kp END    &trans  &trans
&trans  &trans  &trans           &trans          &trans          &msc SCRL_UP      &kp PG_DN  &kp LEFT       &kp DOWN       &kp RIGHT  &trans  &trans
&trans  &trans  &trans           &trans          &trans          &trans            &trans     &trans         &trans         &trans     &trans  &trans
                                 &mt LALT UNDER  &mt LCMD LBRC   &lt 1 DEL         &lt 1 RET  &mt RCMD RBRC  &mt RALT PLUS
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &msc SCRL_RIGHT  &mmv MOVE_UP    &msc SCRL_LEFT   &msc SCRL_DOWN    &kp PG_UP  &kp HOME       &trans         &kp END  &trans  &trans
&trans  &trans  &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP      &kp PG_DN  &mkp LCLK      &mo 3          &mo 4    &trans  &trans
&trans  &trans  &trans           &trans          &trans           &trans            &trans     &mkp RCLK      &trans         &trans   &trans  &trans
                                 &mt LALT UNDER  &mt LCMD LBRC    &lt 1 DEL         &lt 1 RET  &mt RCMD RBRC  &mt RALT PLUS
            >;
        };

        mouse-precision {
            bindings = <
&trans  &trans  &msc SCRL_RIGHT  &mmv MOVE_UP    &msc SCRL_LEFT   &msc SCRL_DOWN    &kp PG_UP  &kp HOME       &trans         &kp END  &trans  &trans
&trans  &trans  &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP      &kp PG_DN  &mkp LCLK      &mo 3          &mo 4    &trans  &trans
&trans  &trans  &trans           &trans          &trans           &trans            &trans     &mkp RCLK      &trans         &trans   &trans  &trans
                                 &mt LALT UNDER  &mt LCMD LBRC    &lt 1 DEL         &lt 1 RET  &mt RCMD RBRC  &mt RALT PLUS
            >;
        };

        media {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &kp C_VOL_UP  &kp C_BRI_UP  &none  &none  &bt_clr
&none  &none         &kp C_PREV    &kp C_PP      &kp C_NEXT    &none           &none  &kp C_VOL_DN  &kp C_BRI_DN  &none  &none  &none
&none  &none         &none         &none         &none         &none           &none  &kp C_MUTE    &none         &none  &none  &none
                                   &none         &none         &none           &none  &none         &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <300>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <300>;
    require-prior-idle-ms = <150>;
};

&mmv_input_listener {
    precision {
        layers = <4>;
        input-processors = <&zip_xy_scaler 1 3>;
    };
};

&msc_input_listener {
    precision {
        layers = <4>;
        input-processors = <&zip_scroll_scaler 1 3>;
    };
};
