#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>

/ {
    behaviors {
        mt {
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        lt {
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB     &kp Q             &kp W               &kp E           &kp R               &kp T            &kp Y      &kp U                &kp I            &kp O                &kp P                      &kp BACKSLASH
&kp ESCAPE  &mt LEFT_SHIFT A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_COMMAND F  &kp G            &kp H      &mt RIGHT_COMMAND J  &mt RIGHT_ALT K  &mt RIGHT_CONTROL L  &mt RIGHT_SHIFT SEMICOLON  &kt SINGLE_QUOTE
&kp GRAVE   &kp Z             &kp X               &kp C           &kp V               &kp B            &kp N      &kp M                &kp COMMA        &kp DOT              &kp FSLH                   &kp ENTER
                                                  &lt 4 MINUS     &lt 2 LEFT_BRACKET  &kp BACKSPACE    &kp SPACE  &lt 1 RIGHT_BRACKET  &lt 5 EQUAL
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans     &kp PG_UP  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans    &trans    &trans     &trans  &trans
                        &trans  &trans  &kp DEL    &kp RET    &trans    &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &msc SCRL_LEFT    &mmv MOVE_UP    &msc SCRL_RIGHT    &msc SCRL_UP    &trans     &mo 3      &trans     &trans  &trans  &trans
&trans  &trans  &mmv MOVE_LEFT    &mmv MOVE_DOWN   &mmv MOVE_RIGHT    &msc SCRL_DOWN    &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans              &trans              &trans             &trans              &trans     &trans     &trans     &trans  &trans  &trans
                                    &trans              &trans             &kp DELETE          &kp ENTER  &mkp LCLK  &mkp RCLK
            >;
        };

        mouse_precision {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&trans  &trans           &trans        &trans        &trans        &trans          &trans        &trans         &trans        &trans                &trans                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
                                       &trans        &trans        &trans          &trans        &trans         &trans
            >;
        };

        functions {
            bindings = <
&trans  &kp F1          &kp F2            &kp F3      &kp F4      &kp F5               &kp F6                &kp F7                 &kp F8  &kp F9  &kp F10  &kp F11
&trans  &trans          &trans            &trans      &trans      &kp C_VOLUME_UP      &kp C_BRIGHTNESS_INC  &trans                 &trans  &trans  &trans   &kp F12
&trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_AUTO  &trans  &trans  &trans   &trans
                                          &trans      &trans      &trans               &trans                &trans                 &trans
            >;
        };

        bluetooth {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &bt BT_CLR
&none  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
                                   &none         &none         &none           &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bluetooth_condition {
            if-layers = <4 5>;
            then-layer = <6>;
        };
    };

    &mmv_input_listener {
        precision {
            layers = <3>;
            input-processors = <&zip_xy_scaler 1 2>;
        };
    };

    &msc_input_listener {
        precision {
            layers = <3>;
            input-processors = <&zip_scroll_scaler 1 2>;
        };
    };
};
